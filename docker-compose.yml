# networks:
#   backend: {}

# volumes:
#   pg-auth-data:

# services:
  ##########################################################
  # Database
  ##########################################################
  # postgres-auth:
  #   image: postgres:16
  #   container_name: postgres-auth
  #   environment:
  #     POSTGRES_USER: auth
  #     POSTGRES_PASSWORD: secret
  #     POSTGRES_DB: authdb
  #   volumes:
  #     - pg-auth-data:/var/lib/postgresql/data
  #   ports:
  #     - "5434:5432"
  #   networks: [backend]

  ##########################################################
  # AuthService
  ##########################################################
#  authservice:
#    build:
#      context: ./services/AuthService/src
#      dockerfile: ../docker/Dockerfile
#    container_name: auth-service
#    environment:
#      - ASPNETCORE_ENVIRONMENT=Development
#      - ConnectionStrings__Default=Host=postgres-auth;Database=authdb;Username=auth;Password=secret
#    depends_on:
#      - postgres-auth
#    ports:
#      - "5001:8080"
#    networks: [backend]



services:
  # ────────── инфраструктура ──────────
  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"      # AMQP
      - "15672:15672"    # Web-UI
    networks: [ clonenet ]

  # ────────── AuthService + БД ──────────
  postgres-auth:
    image: postgres:16
    ports:
    - "5433:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: secret
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks: [ clonenet ]

  authservice:
    build:
      context: .
      dockerfile: services/AuthService/docker/Dockerfile
      args:
        PROJECT_NAME: AuthService
        DOTNET_VERSION: 9.0-preview
    environment:
      ASPNETCORE_URLS:          http://+:5000
      ConnectionStrings__Main: 'Host=postgres-auth;Port=5432;Database=authdb;Username=auth;Password=secret'
      Rabbit__Host:             rabbitmq
      Rabbit__User:             guest
      Rabbit__Pass:             guest
    depends_on:
      - rabbitmq
      - postgres-auth
    ports:
      - "5001:5000"           # Swagger → http://localhost:5001/swagger
    networks: [ clonenet ]

  # ────────── UserService + БД ──────────
  user-db:
    image: postgres:16
    ports:
    - "5434:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks: [ clonenet ]

  userservice:
    build:
      context: .
      dockerfile: services/UserService/docker/Dockerfile
      args:
        PROJECT_NAME: UserService
        DOTNET_VERSION: 9.0-preview
    environment:
      ASPNETCORE_URLS:          http://+:5000
      ConnectionStrings__Main: 'Host=user-db;Port=5432;Database=userdb;Username=user;Password=secret'
      Rabbit__Host:             rabbitmq
      Rabbit__User:             guest
      Rabbit__Pass:             guest
    depends_on:
      - rabbitmq
      - user-db
    ports:
      - "5002:5000"  # Swagger → http://localhost:5002/swagger
    networks: [ clonenet ]

  # ────────── QuestionService + БД ──────────
  question-db:
    image: postgres:16
    ports:
    - "5435:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: questiondb
      POSTGRES_USER: question
      POSTGRES_PASSWORD: secret
    volumes:
      - question-db-data:/var/lib/postgresql/data
    networks: [ clonenet ]

  questionservice:
    build:
      context: .
      dockerfile: services/QuestionService/docker/Dockerfile
      args:
        PROJECT_NAME: QuestionService
        DOTNET_VERSION: 9.0-preview
    environment:
      ASPNETCORE_URLS:          http://+:5000
      ConnectionStrings__Main: 'Host=question-db;Port=5432;Database=questiondb;Username=question;Password=secret'
      Rabbit__Host:             rabbitmq
      Rabbit__User:             guest
      Rabbit__Pass:             guest
    depends_on:
      - rabbitmq
      - question-db
    ports:
      - "5003:5000"  # Swagger → http://localhost:5003/swagger
    networks: [ clonenet ]

# ────────── тома для персистентных БД ──────────
volumes:
  auth-db-data:
  user-db-data:
  question-db-data:

# ────────── общая bridge-сеть ──────────
networks:
  clonenet:
    driver: bridge

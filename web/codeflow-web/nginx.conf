# HTTP -> редирект на HTTPS + challenge
server {
    listen 80;
    listen [::]:80;
    server_name codeflow-project.ru www.codeflow-project.ru;

    # отдаем http-01 challenge без редиректа
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    return 301 https://$host$request_uri;
}

# HTTPS
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name codeflow-project.ru www.codeflow-project.ru;

    ssl_certificate     /etc/letsencrypt/live/codeflow-project.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/codeflow-project.ru/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Включай HSTS только когда убедишься, что https стабилен
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    root /usr/share/nginx/html;
    index index.html;

    # статика (кэшируем)
    location ~* \.(?:js|css|woff2?|ttf|eot|png|jpg|jpeg|gif|svg)$ {
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
        try_files $uri =404;
    }

    # не кэшировать index.html (SPA)
    location = /index.html {
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
        try_files $uri =404;
    }

    # OAuth callbacks -> прямо в AuthService
    location = /signin-google {
        proxy_pass http://authservice:5000;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_read_timeout 300s;
    }

    location = /signin-github {
        proxy_pass http://authservice:5000;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_read_timeout 300s;
    }

    # API через API Gateway
    location /api/ {
        proxy_pass http://apigateway:5000;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";
        proxy_read_timeout 300s;
    }

    # Swagger
    location /swagger {
        proxy_pass http://apigateway:5000;
    }

    # SPA fallback
    location / {
        try_files $uri /index.html;
    }

    client_max_body_size 10m;
}

{
  "JwtSettings": {
    "Issuer": "CodeFlow",
    "Audience": "CodeFlowUsers",
    "ExpiresInMinutes": "60"
  },
  "Services": {
    "User": "http://userservice:5000",
    "Question": "http://questionservice:5000",
    "Answer": "http://answerservice:5000",
    "Comment": "http://commentservice:5000",
    "Tag": "http://tagservice:5000"
  },
  "ReverseProxy" : {
    "Routes": {
      "auth-login-route": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/login",
          "Methods": [ "POST" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },
      "auth-register-route": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/register",
          "Methods": [ "POST" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "auth-logout-route": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/logout",
          "Methods": [ "POST" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "auth-refresh-token-route": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/refresh-token",
          "Methods": [ "POST" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      // --- AUTH: внешняя авторизация (анонимные) ---
      "auth-external-challenge": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/external/challenge/{provider}",
          "Methods": [ "GET" ]
        },       
        "Transforms": [
          { "PathRemovePrefix": "/api" },
          { "RequestHeaderOriginalHost": "true" }
        ]
      },
      "auth-external-callback": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/api/auth/external/callback",
          "Methods": [ "GET" ]
        },        
        "Transforms": [
          { "PathRemovePrefix": "/api" },
          { "RequestHeaderOriginalHost": "true" }
        ]
      },

      // --- AUTH: коллбэки провайдеров (без /api) ---
      "auth-google-signin": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/signin-google",
          "Methods": [ "GET" ]
        },        
        "Transforms": [
          { "RequestHeaderOriginalHost": "true" }
        ]
      },
      "auth-github-signin": {
        "ClusterId": "auth-cluster",
        "Match": {
          "Path": "/signin-github",
          "Methods": [ "GET" ]
        },        
        "Transforms": [
          { "RequestHeaderOriginalHost": "true" }
        ]
      },
      "auth-protected-route": {
        "ClusterId": "auth-cluster",
        "Match": { "Path": "/api/auth/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },

      "user-get-users-route": {
        "ClusterId": "user-cluster",
        "Match": {
          "Path": "/api/users",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "user-get-user-by-id": {
        "ClusterId": "user-cluster",
        "Match": {
          "Path": "/api/users/{id}",
          "Methods": [ "GET" ]
        },

        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },

      "user-protected-route": {
        "ClusterId": "user-cluster",
        "Match": { "Path": "/api/users/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },



      "question-get-questions-route": {
        "ClusterId": "question-cluster",
        "Match": {
          "Path": "/api/questions",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "question-get-question-route": {
        "ClusterId": "question-cluster",
        "Match": {
          "Path": "/api/questions/{questionId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "question-get-question-history-route": {
        "ClusterId": "question-cluster",
        "Match": {
          "Path": "/api/questions/{questionId}/history",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "question-get-question-tag-route": {
        "ClusterId": "question-cluster",
        "Match": {
          "Path": "/api/questions/{questionId}/tag",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "question-get-question-by-user-route": {
        "ClusterId": "question-cluster",
        "Match": {
          "Path": "/api/questions/{questionId}/user/{userId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },
      
      "question-protected-route": {
        "ClusterId": "question-cluster",
        "Match": { "Path": "/api/questions/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },
 


      "answer-get-answer-by-question-route": {
        "ClusterId": "answer-cluster",
        "Match": {
          "Path": "/api/answers/{answerId}/question/{questionId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "answer-get-answer-by-user-route": {
        "ClusterId": "answer-cluster",
        "Match": {
          "Path": "/api/answers/{answerId}/user/{userId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "answer-protected-route": {
        "ClusterId": "answer-cluster",
        "Match": { "Path": "/api/answers/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },



      "comment-get-comments-by-question-route": {
        "ClusterId": "comment-cluster",
        "Match": {
          "Path": "/api/comments/question/{targetId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "comment-get-comments-by-answer-route": {
        "ClusterId": "comment-cluster",
        "Match": {
          "Path": "/api/comments/answer/{answerId}",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "comment-protected-route": {
        "ClusterId": "comment-cluster",
        "Match": { "Path": "/api/comments/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },



      "tag-get-tags-route": {
        "ClusterId": "tag-cluster",
        "Match": {
          "Path": "/api/tags",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "tag-get-tags-by-name-route": {
        "ClusterId": "tag-cluster",
        "Match": {
          "Path": "/api/tags/{tagName}/name",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "tag-get-tags-participation-by-user-route": {
        "ClusterId": "tag-cluster",
        "Match": {
          "Path": "/api/tags/user/{userId}/participation",
          "Methods": [ "GET" ]
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/api"
          }
        ]
      },

      "tag-route": {
        "ClusterId": "tag-cluster",
        "Match": { "Path": "/api/tags/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },

      "reputation-route": {
        "ClusterId": "reputation-cluster",
        "Match": { "Path": "/api/reputations/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      },

      "vote-route": {
        "ClusterId": "vote-cluster",
        "Match": { "Path": "/api/votes/{**catch-all}" },
        "AuthorizationPolicy": "Default",
        "Transforms": [
          { "PathRemovePrefix": "/api" }
        ]
      }
    },
    "Clusters": {
      "auth-cluster": {
        "LoadBalancingPolicy": "RoundRobin",
        "Destinations": {
          "auth1": { "Address": "http://authservice:5000/" }
        }
      },
      "user-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "user1": { "Address": "http://userservice:5000/" }
        }
      },
      "question-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "question1": { "Address": "http://questionservice:5000/" }
        }
      },
      "answer-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "answer1": { "Address": "http://answerservice:5000/" }
        }
      },
      "comment-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "comment1": { "Address": "http://commentservice:5000/" }
        }
      },
      "tag-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "tag1": { "Address": "http://tagservice:5000/" }
        }
      },
      "reputation-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "tag1": { "Address": "http://reputationservice:5000/" }
        }
      },
      "vote-cluster": {
        "LoadBalancingPolicy": "LeastRequests",
        "Destinations": {
          "tag1": { "Address": "http://voteservice:5000/" }
        }
      }
    }
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*"
}

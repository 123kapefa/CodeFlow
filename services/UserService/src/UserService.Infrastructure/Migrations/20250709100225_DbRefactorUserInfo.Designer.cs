// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserService.Infrastructure.Data;

#nullable disable

namespace UserService.Infrastructure.Migrations
{
    [DbContext(typeof(UserServiceDbContext))]
    [Migration("20250709100225_DbRefactorUserInfo")]
    partial class DbRefactorUserInfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserService.Domain.Entities.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AboutMe")
                        .HasColumnType("text");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GitHubUrl")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserStatisticId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserStatisticId1")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserStatisticId")
                        .IsUnique();

                    b.HasIndex("UserStatisticId1")
                        .IsUnique();

                    b.ToTable("UsersInfos");
                });

            modelBuilder.Entity("UserService.Domain.Entities.UserStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastVisitAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Reputation")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("VisitCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UsersStatistic");
                });

            modelBuilder.Entity("UserService.Domain.Entities.UserInfo", b =>
                {
                    b.HasOne("UserService.Domain.Entities.UserStatistic", "UserStatistic")
                        .WithOne()
                        .HasForeignKey("UserService.Domain.Entities.UserInfo", "UserStatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserService.Domain.Entities.UserStatistic", null)
                        .WithOne("UserInfo")
                        .HasForeignKey("UserService.Domain.Entities.UserInfo", "UserStatisticId1");

                    b.Navigation("UserStatistic");
                });

            modelBuilder.Entity("UserService.Domain.Entities.UserStatistic", b =>
                {
                    b.Navigation("UserInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
